AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}"
  VpcCidrBlockIpv6:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      AmazonProvidedIpv6CidrBlock: true
  publicSubnetA:
    Type: AWS::EC2::Subnet
    DependsOn: VpcCidrBlockIpv6
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      Ipv6CidrBlock: !Select [ 0, !Cidr [ !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks], 256, 64 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      #MapPublicIpOnLaunch: true
      AssignIpv6AddressOnCreation: true
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicA"
  privateSubnetA:
    Type: AWS::EC2::Subnet
    DependsOn: VpcCidrBlockIpv6
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.255.0/24
      Ipv6CidrBlock: !Select [ 255, !Cidr [ !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks], 256, 64 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      #AssignIpv6AddressOnCreation: true
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PrivateA"
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: "Name"
        Value: !Sub "${AWS::StackName}-IGW"
  IGWAttachments:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RouteTablePublicA: 
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-RT-PublicA"
  DefaultRouteIPv4PubA:
    Type : AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublicA
  DefaultRouteIPv6PubA:
    Type : AWS::EC2::Route
    Properties:
      DestinationIpv6CidrBlock: ::/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublicA      
  RTSubAssociationPubA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnetA
      RouteTableId: !Ref RouteTablePublicA

